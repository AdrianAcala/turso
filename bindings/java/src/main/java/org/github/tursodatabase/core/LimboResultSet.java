package org.github.tursodatabase.core;

import java.sql.SQLException;

/**
 * A table of data representing limbo database result set, which is generated by executing a statement that queries the
 * database.
 * <p>
 * A {@link LimboResultSet} object is automatically closed when the {@link LimboStatement} object that generated it is
 * closed or re-executed.
 */
public class LimboResultSet {

    private final LimboStatement statement;

    // Whether the result set does not have any rows.
    private boolean isEmptyResultSet = false;
    // If the result set is open. Doesn't mean it has results.
    private boolean open = false;
    // Maximum number of rows as set by the statement
    private long maxRows;
    // number of current row, starts at 1 (0 is used to represent loading data)
    private int row = 0;

    private boolean pastLastRow = false;

    public static LimboResultSet of(LimboStatement statement) {
        return new LimboResultSet(statement);
    }

    private LimboResultSet(LimboStatement statement) {
        this.open = true;
        this.statement = statement;
    }

    public boolean next() throws SQLException {
        if (!open || isEmptyResultSet || pastLastRow) {
            return false; // completed ResultSet
        }

        if (maxRows != 0 && row == maxRows) {
            return false;
        }

        // TODO
        // int statusCode = this.statement.step();
        this.statement.step();
        return true;
    }

    /**
     * Checks the status of the result set.
     *
     * @return true if it's ready to iterate over the result set; false otherwise.
     */
    public boolean isOpen() {
        return open;
    }

    /**
     * @throws SQLException if not {@link #open}
     */
    public void checkOpen() throws SQLException {
        if (!open) {
            throw new SQLException("ResultSet closed");
        }
    }
}
