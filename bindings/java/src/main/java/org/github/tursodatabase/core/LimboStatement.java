package org.github.tursodatabase.core;

import org.github.tursodatabase.annotations.NativeInvocation;
import org.github.tursodatabase.annotations.Nullable;
import org.github.tursodatabase.utils.LimboExceptionUtils;

import java.sql.SQLException;

/**
 * By default, only one <code>resultSet</code> object per <code>LimboStatement</code> can be open at the same time.
 * Therefore, if the reading of one <code>resultSet</code> object is interleaved with the reading of another, each must
 * have been generated by different <code>LimboStatement</code> objects. All execution method in the <code>LimboStatement</code>
 * implicitly close the current <code>resultSet</code> object of the statement if an open one exists.
 */
public class LimboStatement {

    private final long statementPointer;
    private final LimboResultSet resultSet;

    @Nullable
    protected String sql = null;

    public LimboStatement(long statementPointer) {
        this.statementPointer = statementPointer;
        this.resultSet = LimboResultSet.of(this);
    }

    public LimboResultSet getResultSet() {
        return resultSet;
    }

    public void execute() throws SQLException {
        resultSet.next();
    }

    @Nullable
    public LimboStepResult step() throws SQLException {
        return step(this.statementPointer);
    }

    @Nullable
    private native LimboStepResult step(long stmtPointer) throws SQLException;

    /**
     * Throws formatted SQLException with error code and message.
     *
     * @param errorCode         Error code.
     * @param errorMessageBytes Error message.
     */
    @NativeInvocation
    private void throwLimboException(int errorCode, byte[] errorMessageBytes) throws SQLException {
        LimboExceptionUtils.throwLimboException(errorCode, errorMessageBytes);
    }
}
